/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Config file for defining DSL2 per module options and publishing paths
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Available keys to override module options:
        ext.args            = Additional arguments appended to command in module.
        ext.args2           = Second set of arguments appended to command in module (multi-tool modules).
        ext.args3           = Third set of arguments appended to command in module (multi-tool modules).
        ext.args4           = fourth set of arguments appended to command in module (multi-tool modules).
        ext.args5           = fifth set of arguments appended to command in module (multi-tool modules).
        ext.prefix          = File name prefix for output files.
        ext.suffix          = File name suffix for output files.
        ext.suffix2         = File name suffix for output2 files.
        ext.when            = Conditional clause
----------------------------------------------------------------------------------------
*/

process {
    withName: '.*FUSIONS:MANTA_FUSIONS' {
        container = "${params.container_dir}/SomaticPanelPipeline_2021-06-24.sif"

        publishDir = [ 
            path: "${params.outdir}/${params.subdir}/svvcf/",
            mode: 'copy',
            overwrite: true,
            pattern: '*.vcf'
        ]

        ext.when    = params.manta
        ext.args    = { "--reference ${params.genome_file} --exome --generateEvidenceBam" }
        ext.args2   = { "-m local -j ${task.cpus}" }
    }

    withName: '.*FUSIONS:JOIN_FUSIONS' {
        container = "${params.container_dir}/SomaticPanelPipeline_2021-06-24.sif"

        publishDir = [ 
            path: "${params.outdir}/${params.subdir}/svvcf/merged/",
            mode: 'copy',
            overwrite: true,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]

        ext.args    = { "--bnd_distance 10 --no_intra --pass_only --overlap 0.7" }
    }

    withName: '.*FUSIONS:GENEFUSE' {
        container = "${params.container_dir}/genefuse-0.8.0.sif"

        publishDir = [ 
            path: "${params.outdir}/${params.subdir}/fusions",
            mode: 'copy',
            overwrite: true,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]

        ext.args    = { "-r ${params.genome_file} -f ${params.genefuse_reference}" }
    }

    withName: '.*FUSIONS:SNPEFF' {
        container = "${params.container_dir}/snpeff_4.3.1t2.sif"

        publishDir = [ 
            path: "${params.outdir}/${params.subdir}/fusions/",
            mode: 'copy',
            overwrite: true,
            pattern: '*.vcf',
        ]

        ext.args    = { "-configOption data.dir=${params.refpath}/snpeff/ GRCh38.86" }
    }

    withName: '.*FUSIONS:FILTER_MANTA' {
        container = "${params.container_dir}/SomaticPanelPipeline_2021-06-24.sif"

        publishDir = [ 
            path: "${params.outdir}/${params.subdir}/svvcf",
            mode: 'copy',
            overwrite: true,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]

        ext.args    = { "--id ${meta.id} --af 0.05" }
    }

    withName: '.*FUSIONS:GENEFUSE_JSON_TO_VCF' {
        container = "${params.container_dir}/SomaticPanelPipeline_2021-06-24.sif"

        publishDir = [ 
            path: "${params.outdir}/${params.subdir}/svvcf",
            mode: 'copy',
            overwrite: true,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }
}